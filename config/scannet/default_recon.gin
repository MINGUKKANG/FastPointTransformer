include "./config/default.gin"

# Constants
in_channels = 3
out_channels = 3

# Data module
ScanNetRGBReconDataModule.data_root = "/root/data/scannetv2" # you need to modify this according to your data.
ScanNetRGBReconDataModule.train_batch_size = 8
ScanNetRGBReconDataModule.val_batch_size = 2
ScanNetRGBReconDataModule.train_num_workers = 8
ScanNetRGBReconDataModule.val_num_workers = 4
ScanNetRGBReconDataModule.collation_type = "collate_minkowski"
ScanNetRGBReconDataModule.train_transforms = [
    "DimensionlessCoordinates",
    "RandomRotation",
    "RandomCrop",
    "RandomAffine", # affine to rotate the rectangular crop
    "CoordinateDropout",
    "RandomHorizontalFlip",
    "RandomTranslation",
    "ElasticDistortion",
    "NormalizeColor",
]
ScanNetRGBReconDataModule.eval_transforms = [
    "DimensionlessCoordinates",
    "NormalizeColor",
]

# Augmentation
DimensionlessCoordinates.voxel_size = 0.1
RandomCrop.x = 250
RandomCrop.y = 250
RandomCrop.z = 250
RandomHorizontalFlip.upright_axis = "z"
RandomAffine.upright_axis = "z"
RandomAffine.application_ratio = 0.7
ChromaticJitter.std = 0.01
ChromaticJitter.application_ratio = 0.7
ElasticDistortion.distortion_params = [(4, 16)]
ElasticDistortion.application_ratio = 0.7
NormalizeColor.mean = [0, 0, 0]
NormalizeColor.std = [255, 255, 255]

# Pytorch lightning module
LitReconstructionModuleBase.num_classes = %out_channels
LitReconstructionModuleBase.lr = 0.1
LitReconstructionModuleBase.momentum = 0.9
LitReconstructionModuleBase.weight_decay = 1e-4
LitReconstructionModuleBase.warmup_steps_ratio = 0.01
LitReconstructionModuleBase.best_metric_type = "maximize"

# Training
train.data_module_name = "ScanNetRGBReconDataModule"
train.log_every_n_steps = 10
train.check_val_every_n_epoch = 1
train.refresh_rate_per_second = 1
train.best_metric = "val_psnr"
train.max_epoch = None
train.max_step = 10000

# Logging
logged_hparams.keys = [
    "train.model_name",
    "train.data_module_name",
    "DimensionlessCoordinates.voxel_size"
]